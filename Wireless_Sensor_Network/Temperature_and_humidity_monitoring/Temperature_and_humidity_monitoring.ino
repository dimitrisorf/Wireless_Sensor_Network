#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Temperature and humidity monitoring"
  https://create.arduino.cc/cloud/things/4202742a-b802-4d86-8f85-2a73394c0797 
  Arduino IoT Cloud Variables description
  The following variables are automatically generated and updated when changes are made to the Thing
 
  CloudRelativeHumidity humidity;
  String msg;
  CloudTemperatureSensor temperature;
 
 Variables which are marked as READ/WRITE in the Cloud Thing will also have functions   which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
 
#include "thingProperties.h"
#include "DHT.h"
#define DHTpin 2 // D4 on the nodemcu ESP8266
#define DHTTYPE DHT11
DHT dht(DHTpin,DHTTYPE);

// for the Rain Sensor
#define rainAnalog A0
#define rainDigital D1
boolean bIsRaining;

// for the Gas Sensor
// int Gas_analog = A0;    // used for ESP8266
// int Gas_digital = D1;   // used for ESP8266
 
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
 
  // Defined in thingProperties.h
  initProperties();
 
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
 
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  // for the Rain Sensor
  pinMode(rainDigital,INPUT);
  
  // for the Gas Sensor
  // pinMode(Gas_digital, INPUT);
}
 
void loop() {
  ArduinoCloud.update();
  // Your code here 
  dht_sensor_getdata();
  
  // for the Rain Sensor
  rain_sensor_getdata();
  
  // for the Gas Sensor
  // gas_sensor_getdata();
}
 
void onHumidityChange() {
  // Do something
 
}
 
void onMsgChange() {
  // Do something
}
 void dht_sensor_getdata() {
    float hm= dht.readHumidity();
    Serial.print("Humidity ");
    Serial.println(hm);
    float temp=dht.readTemperature();
    Serial.print("Temperature ");
    Serial.println(temp);
    humidity=hm;
    temperature=temp;
    //msg="Temperature = " + String (temperature)+"  Humidity = " + String(humidity);
}

// for the Rain Sensor

  void rain_sensor_getdata() {
  int threshold = 800;
  // digitalWrite(sensorPower, HIGH);  // Turn the sensor ON
  delay(10);              // Allow power to settle
  int rainAnalogVal = analogRead(rainAnalog);

  if(rainAnalogVal < threshold) {
    bIsRaining = true;
    msg="It is raining!!!";
  }
  else {
    bIsRaining = false;
    msg="It is not raining!";
  }
  // digitalWrite(sensorPower, LOW);    // Turn the sensor OFF

  Serial.print(rainAnalogVal);
  Serial.print("\t");
  Serial.println(bIsRaining);
  delay(1000);
  
  analog_rain=rainAnalogVal;
  // digital_rain=rainDigitalVal;
  // digital_rain=bIsRaining;
}

/*
// for the Gas Sensor
void gas_sensor_getdata() {
  int gassensorAnalog = analogRead(Gas_analog);
  int gassensorDigital = digitalRead(Gas_digital);

  Serial.print("Gas Sensor: ");
  Serial.print(gassensorAnalog);
  Serial.print("\t");
  Serial.print("Gas Class: ");
  Serial.print(gassensorDigital);
  Serial.print("\t");
  Serial.print("\t");
  
  if (gassensorAnalog > 1000) {
    Serial.println("Gas");
    msg="Gas detected!!!";
  }
  else {
    Serial.println("No Gas");
    msg="No Gas detected!";
  }
  analog_gas=gassensorAnalog;
  delay(1000);
}*/
/*
  Since AnalogRain is READ_WRITE variable, onAnalogRainChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAnalogRainChange()  {
  // Add your code here to act upon AnalogRain change
}
/*
  Since DigitalRain is READ_WRITE variable, onDigitalRainChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onDigitalRainChange()  {
  // Add your code here to act upon DigitalRain change
}
void onGassensorAnalogChange()  {
  // Add your code here to act upon DigitalRain change
}
/*
  Since AnalogGas is READ_WRITE variable, onAnalogGasChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAnalogGasChange()  {
  // Add your code here to act upon AnalogGas change
}